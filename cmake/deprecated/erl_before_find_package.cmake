function(erl_before_find_package)
    set(options)
    set(oneValueArgs PACKAGE_NAME WIN_CMD MAC_CMD UBUNTU_CMD ARCH_CMD NO_CMD)
    set(multiValueArgs)

    cmake_parse_arguments(ERL "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

    if (DEFINED ERL_NO_CMD)
        message(STATUS "Finding package ${ERL_PACKAGE_NAME}, if failed, please ${ERL_NO_CMD}.")
    elseif (WIN32)
        if (NOT ERL_WIN_CMD)
            message(FATAL_ERROR "erl_before_find_package() requires WIN_CMD on Windows")
        endif()
        message(STATUS "Finding package ${ERL_PACKAGE_NAME}, if failed, please ${ERL_WIN_CMD}.")
    elseif (APPLE)
        if (NOT ERL_MAC_CMD)
            message(FATAL_ERROR "erl_before_find_package() requires MAC_CMD on Mac")
        endif()
        message(STATUS "Finding package ${ERL_PACKAGE_NAME}, if failed, please ${ERL_MAC_CMD}.")
    else()
        erl_os_release_info(linux_distro linux_version linux_codename)
        if (linux_distro STREQUAL "ubuntu")
            if (NOT ERL_UBUNTU_CMD)
                message(FATAL_ERROR "erl_before_find_package() requires UBUNTU_CMD on Ubuntu")
            endif()
            message(STATUS "Finding package ${ERL_PACKAGE_NAME}, if failed, please ${ERL_UBUNTU_CMD}.")
        elseif (linux_distro STREQUAL "arch")
            if (NOT ERL_ARCH_CMD)
                message(FATAL_ERROR "erl_before_find_package() requires ARCH_CMD on ArchLinux")
            endif()
            message(STATUS "Finding package ${ERL_PACKAGE_NAME}, if failed, please ${ERL_ARCH_CMD}.")
        else()
            message(STATUS "Finding package ${ERL_PACKAGE_NAME}, no suggestion on failure for ${linux_distro}.")
        endif ()
    endif()

endfunction()
