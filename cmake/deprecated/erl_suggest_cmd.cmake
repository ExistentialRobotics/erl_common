function(erl_suggest_cmd)
    set(options)
    set(oneValueArgs PACKAGE_NAME WIN_CMD MAC_CMD UBUNTU_CMD ARCH_CMD NO_CMD MSG_TYPE)
    set(multiValueArgs)
    cmake_parse_arguments(ERL "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

    if (NOT ERL_PACKAGE_NAME)
        message(FATAL_ERROR "erl_suggest_cmd() requires PACKAGE_NAME")
    endif()

    if (NOT ERL_MSG_TYPE)
        set(ERL_MSG_TYPE "STATUS")
    endif()

    if (DEFINED ERL_NO_CMD)
        message(${ERL_MSG_TYPE} "${ERL_PACKAGE_NAME} is not installed. Please ${ERL_NO_CMD}.")
    elseif (WIN32)
        if (NOT ERL_WIN_CMD)
            message(FATAL_ERROR "erl_suggest_cmd() requires WIN_CMD on Windows")
        endif()
        message(${ERL_MSG_TYPE} "${ERL_PACKAGE_NAME} is not installed. Please ${ERL_WIN_CMD}.")
    elseif (APPLE)
        if (NOT ERL_MAC_CMD)
            message(FATAL_ERROR "erl_suggest_cmd() requires MAC_CMD on Mac")
        endif()
        message(${ERL_MSG_TYPE} "${ERL_PACKAGE_NAME} is not installed. Please ${ERL_MAC_CMD}.")
    else()
        if (NOT ERL_UBUNTU_CMD)
            message(FATAL_ERROR "erl_suggest_cmd() requires UBUNTU_CMD on Linux")
        endif()
        message(${ERL_MSG_TYPE} "${ERL_PACKAGE_NAME} is not installed. Please ${ERL_UBUNTU_CMD}.")
    endif()
endfunction()
